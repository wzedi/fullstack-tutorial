AWSTemplateFormatVersion: 2010-09-09
Description: Infrastructure template for Apollo GraphQL app
Transform: 'AWS::Serverless-2016-10-31'

Resources:
  UserDynamoDB:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: user
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: N
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      SSESpecification:
        SSEEnabled: true

  TripDynamoDB:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: trip
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: launchId
          AttributeType: N
      KeySchema:
        - AttributeName: launchId
          KeyType: HASH
      SSESpecification:
        SSEEnabled: true

  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'POST, GET'"
        AllowHeaders: "'X-Forwarded-For'"
        AllowOrigin: "*"
        MaxAge: "'600'"
        AllowCredentials: True

  ServerLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: ../server
      Handler: src/index.graphqlHandler
      Role: !GetAtt LambdaIAMPermissions.Arn
      Runtime: nodejs12.x
      Events:
        GetRequest:
          Type: Api
          Properties:
            Path: /graphql
            Method: get
            RestApiId: 
              Ref: ApiGatewayApi
        PostRequest:
          Type: Api
          Properties:
            Path: /graphql
            Method: post
            RestApiId: 
              Ref: ApiGatewayApi

  LambdaIAMPermissions:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - lambda:*
                  - dynamodb:*
                Resource: "*"

  ClientS3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: PublicRead
      BucketName: io.orchestrated.test1.fullstack-gql-website-deployment
      WebsiteConfiguration: 
        ErrorDocument: index.html
        IndexDocument: index.html
  
  ClientS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: 
        Ref: ClientS3Bucket
      PolicyDocument:
        Statement: 
          - Effect: Allow
            Principal: "*"
            Action:
              - "s3:GetObject"
            Resource:
              Fn::Sub: "arn:aws:s3:::${ClientS3Bucket}/*"

Outputs:
  GraphQL:
    Description: URL of GraphQL endpoint
    Value:
      Ref: ApiGatewayApi